---
layout: default.ejs
eleventyComputed: {
	title: "<%- name %> â€” Monumentos Rio"
}
---

<%_ const monuments = collections.all.filter(file => file.filePathStem.startsWith("/id/"));
monuments.sort((a, b) => a.data.name.localeCompare(b.data.name));
const monument_count = monuments.length;

const distinct_categories = new Set();
monuments.forEach(mon => {
	// If property is an array
	if(mon.data[property] instanceof Array) {
		mon.data[property].forEach(val => {
			distinct_categories.add(val);
		});
	} else {
		// Otherwise, if it's a simple value, add it
		distinct_categories.add(mon.data[property]);
	}
});
// Make sure there's no undefined
distinct_categories.delete("");
distinct_categories.delete(undefined);
distinct_categories.delete(null);

const lists = [];
const categories_list = [...distinct_categories];
categories_list.sort((a, b) => a.localeCompare(b));

categories_list.forEach(cat => {
	lists.push(monuments.reduce((acc, file) => {
		// If property is an array
		if(file.data[property] instanceof Array) {
			// Check if array includes this category
			if(file.data[property].includes(cat)) {
				// Add it to the list
				acc.push(file);
			}
		} else {
			// Otherwise, if it's a simple value
			// Check if it matches
			if(cat === file.data[property])
				acc.push(file);
		}
		return acc;
	}, []));
});
%>

<main>
	<h1 class="cutout-width-limit"><%= heading %></h1>
	<section class="indent-children maxwidth">
		<p><%- content %></p>
	</section>
	<%_ for(let c = 0; c < lists.length; c++) {
		const current_cat = categories_list[c]; %>
		<h2 id="<%= catCleanup(current_cat) %>"><%- current_cat %></h2>
		<div class="card-list">
			<%_ for(let i = 0; i < lists[c].length; i++) {
			%><%- makeCard(lists[c][i]) %><%_
			} %>
		</div>
	<%_ } %>
</main>