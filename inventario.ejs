---
layout: default.ejs
title: Inventário — Monumentos Rio
---

<%_ const monuments = collections.all.filter(file => file.filePathStem.startsWith("/id/"));
monuments.sort((a, b) => a.data.name.localeCompare(b.data.name));
const monument_count = monuments.length;

const alphabet = "ABCDEFGHIJKLMNOPQRSTUVWXYZ".split("");

function normalize(str) {
	return str.normalize("NFD").replace(/\p{Diacritic}/gu, "").trim();
}

const letters = new Set();
monuments.forEach(mon => {
	const letter = normalize(mon.data.name)[0];
	if(alphabet.includes(letter))
		letters.add(letter);
	else
		letters.add("#");
});

const lists = [];
const letters_list = [...letters];
letters_list.forEach(letter => {
	lists.push(monuments.reduce((acc, file) => {
		let current_first_letter = normalize(file.data.name)[0].toUpperCase();
		if(!alphabet.includes(current_first_letter))
			current_first_letter = '#';

		if(letter === current_first_letter)
			acc.push(file);
		return acc;
	}, []));
});
%>

<main>
<h1>Inventário</h1>
<section class="indent-children maxwidth">
	<p>
		Esta é uma lista de todos os monumentos catalogados, ordenados
		alfabeticamente. Para outras 
		Até agora, os seguintes
		<strong><%= monument_count %></strong> monumentos já foram catalogados:
	</p>
</section>
<details id="list-toc">
	<summary>Pular para:</summary>
	<div>
	<%_ for(let i = 0; i < alphabet.length; i++) { %>
		<%_ if(letters.has(alphabet[i])) { %>
			<a href="#letra-<%= alphabet[i] %>"><%= alphabet[i] %></a>
		<%_ } else { %>
			<span><%= alphabet[i] %></span>
		<%_ } %>
	<%_ } %>
	</div>
</details>
<%_ for(let c = 0; c < lists.length; c++) {
	const current_letter = letters_list[c]; %>
	<section>
		<h2 id="letra-<%= current_letter %>"><%= current_letter %></h2>
		<div class="card-list">
			<%_ for(let i = 0; i < lists[c].length; i++) { %>
				<%- makeCard(lists[c][i]) %>
			<%_ } %>
		</div>
	</section>
<%_ } %>
</main>